openapi: 3.1.0
info: {}
paths:
  /modbustohttp.v1alpha1.ModbusService/ReadHoldingRegisters:
    get:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadHoldingRegisters
      operationId: modbustohttp.v1alpha1.ModbusService.ReadHoldingRegisters.get
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
        - name: message
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadHoldingRegistersRequest'
        - name: encoding
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/encoding'
        - name: base64
          in: query
          schema:
            $ref: '#/components/schemas/base64'
        - name: compression
          in: query
          schema:
            $ref: '#/components/schemas/compression'
        - name: connect
          in: query
          schema:
            $ref: '#/components/schemas/connect'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadHoldingRegistersResponse'
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadHoldingRegisters
      operationId: modbustohttp.v1alpha1.ModbusService.ReadHoldingRegisters
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadHoldingRegistersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadHoldingRegistersResponse'
  /modbustohttp.v1alpha1.ModbusService/WriteSingleRegister:
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: WriteSingleRegister
      operationId: modbustohttp.v1alpha1.ModbusService.WriteSingleRegister
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteSingleRegisterRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteSingleRegisterResponse'
  /modbustohttp.v1alpha1.ModbusService/ReadCoils:
    get:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadCoils
      operationId: modbustohttp.v1alpha1.ModbusService.ReadCoils.get
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
        - name: message
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadCoilsRequest'
        - name: encoding
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/encoding'
        - name: base64
          in: query
          schema:
            $ref: '#/components/schemas/base64'
        - name: compression
          in: query
          schema:
            $ref: '#/components/schemas/compression'
        - name: connect
          in: query
          schema:
            $ref: '#/components/schemas/connect'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadCoilsResponse'
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadCoils
      operationId: modbustohttp.v1alpha1.ModbusService.ReadCoils
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadCoilsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadCoilsResponse'
  /modbustohttp.v1alpha1.ModbusService/ReadDiscreteInputs:
    get:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadDiscreteInputs
      operationId: modbustohttp.v1alpha1.ModbusService.ReadDiscreteInputs.get
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
        - name: message
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadDiscreteInputsRequest'
        - name: encoding
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/encoding'
        - name: base64
          in: query
          schema:
            $ref: '#/components/schemas/base64'
        - name: compression
          in: query
          schema:
            $ref: '#/components/schemas/compression'
        - name: connect
          in: query
          schema:
            $ref: '#/components/schemas/connect'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadDiscreteInputsResponse'
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadDiscreteInputs
      operationId: modbustohttp.v1alpha1.ModbusService.ReadDiscreteInputs
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadDiscreteInputsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadDiscreteInputsResponse'
  /modbustohttp.v1alpha1.ModbusService/WriteSingleCoil:
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: WriteSingleCoil
      operationId: modbustohttp.v1alpha1.ModbusService.WriteSingleCoil
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteSingleCoilRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteSingleCoilResponse'
  /modbustohttp.v1alpha1.ModbusService/WriteMultipleCoils:
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: WriteMultipleCoils
      operationId: modbustohttp.v1alpha1.ModbusService.WriteMultipleCoils
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteMultipleCoilsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteMultipleCoilsResponse'
  /modbustohttp.v1alpha1.ModbusService/ReadInputRegisters:
    get:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadInputRegisters
      operationId: modbustohttp.v1alpha1.ModbusService.ReadInputRegisters.get
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
        - name: message
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadInputRegistersRequest'
        - name: encoding
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/encoding'
        - name: base64
          in: query
          schema:
            $ref: '#/components/schemas/base64'
        - name: compression
          in: query
          schema:
            $ref: '#/components/schemas/compression'
        - name: connect
          in: query
          schema:
            $ref: '#/components/schemas/connect'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadInputRegistersResponse'
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: ReadInputRegisters
      operationId: modbustohttp.v1alpha1.ModbusService.ReadInputRegisters
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadInputRegistersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.ReadInputRegistersResponse'
  /modbustohttp.v1alpha1.ModbusService/WriteMultipleRegisters:
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: WriteMultipleRegisters
      operationId: modbustohttp.v1alpha1.ModbusService.WriteMultipleRegisters
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteMultipleRegistersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteMultipleRegistersResponse'
  /modbustohttp.v1alpha1.ModbusService/WriteBitInRegister:
    post:
      tags:
        - modbustohttp.v1alpha1.ModbusService
      summary: WriteBitInRegister
      operationId: modbustohttp.v1alpha1.ModbusService.WriteBitInRegister
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteBitInRegisterRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modbustohttp.v1alpha1.WriteBitInRegisterResponse'
components:
  schemas:
    modbustohttp.v1alpha1.BooleanAddress:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          minimum: 0
          description: |
            The address of the coil or discrete input
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 65535
        value:
          type: boolean
          title: value
          description: The value of the coil or discrete input
      title: BooleanAddress
      additionalProperties: false
    modbustohttp.v1alpha1.Register:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          description: |
            The address of the register
            uint32.lte = 65535
        value:
          type: integer
          title: value
          maximum: 65535
          minimum: 0
          description: |
            The value of the register
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 65535
      title: Register
      additionalProperties: false
      description: A modbus register value
    modbustohttp.v1alpha1.ReadCoilsRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          minimum: 0
          description: |
            The address to start reading from
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 65535
        quantity:
          type: integer
          title: quantity
          maximum: 2000
          minimum: 1
          description: |
            The quantity of registers to read starting from address
            uint32.gte = 1
            uint32.gte_lt = 1
            uint32.gte_lt_exclusive = 1
            uint32.gte_lte = 1
            uint32.gte_lte_exclusive = 1
            uint32.lte = 2000
      title: ReadCoilsRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + quantity must not be greater than 65536
    modbustohttp.v1alpha1.ReadCoilsResponse:
      type: object
      properties:
        coils:
          type: array
          items:
            $ref: '#/components/schemas/modbustohttp.v1alpha1.BooleanAddress'
          title: coils
          maxItems: 2000
          minItems: 1
      title: ReadCoilsResponse
      additionalProperties: false
    modbustohttp.v1alpha1.ReadDiscreteInputsRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          minimum: 0
          description: |
            The address to start reading from
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 65535
        quantity:
          type: integer
          title: quantity
          maximum: 2000
          minimum: 1
          description: |
            The quantity of registers to read starting from address
            uint32.gte = 1
            uint32.gte_lt = 1
            uint32.gte_lt_exclusive = 1
            uint32.gte_lte = 1
            uint32.gte_lte_exclusive = 1
            uint32.lte = 2000
      title: ReadDiscreteInputsRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + quantity must not be greater than 65536
    modbustohttp.v1alpha1.ReadDiscreteInputsResponse:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/modbustohttp.v1alpha1.BooleanAddress'
          title: inputs
          maxItems: 2000
          minItems: 1
      title: ReadDiscreteInputsResponse
      additionalProperties: false
    modbustohttp.v1alpha1.ReadHoldingRegistersRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          description: |
            The address start start reading from
            uint32.lte = 65535
        quantity:
          exclusiveMinimum: 0
          type: integer
          title: quantity
          maximum: 125
          description: |
            The quantity of registers to read start from address
            uint32.gt = 0
            uint32.gt_lt = 0
            uint32.gt_lt_exclusive = 0
            uint32.gt_lte = 0
            uint32.gt_lte_exclusive = 0
            uint32.lte = 125
          nullable: true
      title: ReadHoldingRegistersRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + quantity must not be greater than 65536
    modbustohttp.v1alpha1.ReadHoldingRegistersResponse:
      type: object
      properties:
        registers:
          type: array
          items:
            $ref: '#/components/schemas/modbustohttp.v1alpha1.Register'
          title: registers
          maxItems: 125
          minItems: 1
          description: The values of the registers read
      title: ReadHoldingRegistersResponse
      additionalProperties: false
    modbustohttp.v1alpha1.ReadInputRegistersRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          description: |
            The address start start reading from
            uint32.lte = 65535
        quantity:
          exclusiveMinimum: 0
          type: integer
          title: quantity
          maximum: 125
          description: |
            The quantity of registers to read start from address
            uint32.gt = 0
            uint32.gt_lt = 0
            uint32.gt_lt_exclusive = 0
            uint32.gt_lte = 0
            uint32.gt_lte_exclusive = 0
            uint32.lte = 125
          nullable: true
      title: ReadInputRegistersRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + quantity must not be greater than 65536
    modbustohttp.v1alpha1.ReadInputRegistersResponse:
      type: object
      properties:
        registers:
          type: array
          items:
            $ref: '#/components/schemas/modbustohttp.v1alpha1.Register'
          title: registers
          maxItems: 125
          minItems: 1
          description: The values of the registers read
      title: ReadInputRegistersResponse
      additionalProperties: false
    modbustohttp.v1alpha1.WriteBitInRegisterRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          description: |
            The address of the register
            uint32.lte = 65535
        bit:
          type: integer
          title: bit
          maximum: 15
          minimum: 0
          description: |
            The bit to write in the register (0-15)
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 15
        value:
          type: boolean
          title: value
          description: The value of the bit to write
      title: WriteBitInRegisterRequest
      additionalProperties: false
    modbustohttp.v1alpha1.WriteBitInRegisterResponse:
      type: object
      properties:
        register:
          title: register
          $ref: '#/components/schemas/modbustohttp.v1alpha1.Register'
      title: WriteBitInRegisterResponse
      additionalProperties: false
    modbustohttp.v1alpha1.WriteMultipleCoilsRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          minimum: 0
          description: |
            uint32.gte = 0
            uint32.gte_lt = 0
            uint32.gte_lt_exclusive = 0
            uint32.gte_lte = 0
            uint32.gte_lte_exclusive = 0
            uint32.lte = 65535
        values:
          type: array
          items:
            type: boolean
          title: values
      title: WriteMultipleCoilsRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + length of values must not be greater than 65536
    modbustohttp.v1alpha1.WriteMultipleCoilsResponse:
      type: object
      title: WriteMultipleCoilsResponse
      additionalProperties: false
    modbustohttp.v1alpha1.WriteMultipleRegistersRequest:
      type: object
      properties:
        address:
          type: integer
          title: address
          maximum: 65535
          description: |
            uint32.lte = 65535
        values:
          type: array
          items:
            type: integer
            maxItems: 123
            minItems: 1
          title: values
          maxItems: 123
          minItems: 1
      title: WriteMultipleRegistersRequest
      additionalProperties: false
      description: |
        not.out.of.range // address + length of values must not be greater than 65536
    modbustohttp.v1alpha1.WriteMultipleRegistersResponse:
      type: object
      title: WriteMultipleRegistersResponse
      additionalProperties: false
    modbustohttp.v1alpha1.WriteSingleCoilRequest:
      type: object
      properties:
        coil:
          title: coil
          $ref: '#/components/schemas/modbustohttp.v1alpha1.BooleanAddress'
      title: WriteSingleCoilRequest
      additionalProperties: false
    modbustohttp.v1alpha1.WriteSingleCoilResponse:
      type: object
      title: WriteSingleCoilResponse
      additionalProperties: false
    modbustohttp.v1alpha1.WriteSingleRegisterRequest:
      type: object
      properties:
        register:
          title: register
          description: The register to write
          $ref: '#/components/schemas/modbustohttp.v1alpha1.Register'
      title: WriteSingleRegisterRequest
      additionalProperties: false
    modbustohttp.v1alpha1.WriteSingleRegisterResponse:
      type: object
      title: WriteSingleRegisterResponse
      additionalProperties: false
    encoding:
      title: encoding
      enum:
        - proto
        - json
      description: Define which encoding or 'Message-Codec' to use
    base64:
      type: boolean
      title: base64
      description: Specifies if the message query param is base64 encoded, which may be required for binary data
    compression:
      title: compression
      enum:
        - identity
        - gzip
        - br
      description: Which compression algorithm to use for this request
    connect:
      title: connect
      enum:
        - v1
      description: Define the version of the Connect protocol
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
security: []
tags:
  - name: modbustohttp.v1alpha1.ModbusService
    description: "ModbusService translates the modbus.Client interface to RPC here: https://pkg.go.dev/github.com/goburrow/modbus#Client\r\n Implementation guided by the documentation of the Modbus protocol here: https://www.modbustools.com/modbus.html"
